<agent xmlns="http://jadex.sourceforge.net/jadex"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://jadex.sourceforge.net/jadex
http://jadex.sourceforge.net/jadex-0.96.xsd"
name="tablero"
package="src.tablero"
>
	<imports>
		<import>jadex.runtime.*</import>
		<import>jadex.planlib.*</import>
		<import>jadex.adapter.fipa.*</import>
		<import>java.util.logging.*</import>
		<import>java.util.*</import>
		<import>jadex.util.*</import>
		<import>tablero.planes.*</import>
	    <import>ontologia.acciones.*</import>
	    <import>ontologia.conceptos.*</import>
	    <import>ontologia.predicados.*</import>

	</imports>

	<capabilities>
	    <capability name="dfcap" file="jadex.planlib.DF"/>
	</capabilities>

	<beliefs>
		<!-- Para almacenar los votos del equipo -->
		<beliefset name="votosequipo" class="Voto"/>
		
		<!-- Para almacenar los votos del mision -->
		<beliefset name="votosmision" class="Voto"/>

		<!-- Los jugadores -->
		<belief name="jugadores" class="Lista_Jugadores">
			<fact>new Lista_Jugadores()</fact>
		</belief>

		<belief name="total" class="int">
			<fact>0</fact>
		</belief>

				<!-- Jugadores que van a ir a la mision -->
		<belief name="Equipo" class="Lista_Jugadores">
			<fact>null</fact>
		</belief>
		
		<!-- Representacion de la ronda en la que estamos-->
		<belief name="Ronda" class="int">
			<fact>1</fact>
		</belief>

		<!-- Representacion de el numero de jugadores que forma parte del equipo en la Ronda1-->
		<belief name="Equipo1" class="int">
			<fact>2</fact>
		</belief>
		<!-- Representacion de el numero de jugadores que forma parte del equipo en la Ronda2-->
		<belief name="Equipo2" class="int">
			<fact>3</fact>
		</belief>
		<!-- Representacion de el numero de jugadores que forma parte del equipo en la Ronda3-->
		<belief name="Equipo3" class="int">
			<fact>3</fact>
		</belief>
		<!-- Representacion de el numero de jugadores que forma parte del equipo en la Ronda4-->
		<belief name="Equipo4" class="int">
			<fact>4</fact>
		</belief>
		<!-- Representacion de el numero de jugadores que forma parte del equipo en la Ronda5-->
		<belief name="Equipo5" class="int">
			<fact>4</fact>
		</belief>
		<!-- Representacion de el numero de votaciones-->
		<belief name="VotacionesRechazadas" class="int">
			<fact>0</fact>	
		</belief>
		<!-- Representacion de el numero de misiones que se han completado-->
		<belief name="MisionesCompletadas" class="int">
			<fact>0</fact>	
		</belief>
		
		<belief name="LiderAsignado" class="boolean">
			<fact>true</fact>	
		</belief>
		<belief name="ActivarAprobarEquipo" class="boolean">
			<fact>false</fact>
		</belief>

		<!-- Creencias que indican que se ha terminado un plan-->
		<!-- Para saber cuando se acabe el plan preparar partida-->
		<belief name="Preparada" class="boolean">
			<fact>false</fact>
		</belief>
		<!-- Para saber cuando se acaba el plan equipoelegido-->
		<belief name="ResultadoEquipo" class="boolean">
			<fact>false</fact>
		</belief>
		<!-- Para saber cuando se acaba el plan aprobarequipo-->
		<belief name="VotacionEquipoRealizada" class="boolean">
			<fact>false</fact>
		</belief>
		<!-- Para saber cuando se acaba el plan votarmision-->
		<belief name="VotacionMisionRealizada" class="boolean">
			<fact>false</fact>
		</belief>
		<belief name="FinPartida" class="boolean">
			<fact>false</fact>
		</belief>


	</beliefs>
	
	<goals>
		<!-- Objetivo principal jugar una partida -->
		<performgoal name="JugarPartida" exclude="when_succeeded">
			<creationcondition>
				<!-- Que empiece la partida cuando sean 7 jugadores(valor predeterminado)-->
				($beliefbase.total == 7)
			</creationcondition>
		</performgoal>
		<!-- Objetivo de avisar a los espias de quienes son los otros espias-->
		<performgoal name="AvisarEspias" exclude="when_tried" >
			<creationcondition>
				<!-- Para que avise a los espias de quienes son los otros espias-->
				$beliefbase.Preparada == true
			</creationcondition>
		</performgoal>

		
		<!-- Objetivo de publicar la votacion de mision-->
		<achievegoal name="Aprobar_equipo" exclude="when_succeeded"  recur="true" >
			<creationcondition>
				<!-- Que se active cuando el equipo este en las creencias y no se haya realizado la votación-->
				($beliefbase.ActivarAprobarEquipo == true &amp;&amp; $beliefbase.VotacionEquipoRealizada != true &amp;&amp; $beliefbase.FinPartida==false)
			</creationcondition>
			<targetcondition>
				$beliefbase.VotacionEquipoRealizada == true
			</targetcondition>
		</achievegoal>
		<!-- Objetivo de publicar la votacion de mision-->
		<achievegoal name="VotarMision" exclude="when_succeeded" recur="true">
			<creationcondition>
				<!-- Que se active cuando el equipo este en las creencias-->
				$beliefbase.ResultadoEquipo == true &amp;&amp; $beliefbase.VotacionMisionRealizada != true &amp;&amp; $beliefbase.FinPartida==false
			</creationcondition>
			<targetcondition>
				$beliefbase.VotacionMisionRealizada == true
			</targetcondition>
		</achievegoal>
		<!-- Objetivo para asignar un lider-->
		
		<!-- TODO:  VER SI HAY QUE HACERLO COMO ACHIEVEGOAL-->
		<performgoal name="Asignar_Lider" exclude="when_succeeded">
			<creationcondition>
				<!-- Que se active cuando el equipo este en las creencias-->
				$beliefbase.LiderAsignado == false &amp;&amp; $beliefbase.FinPartida==false
			</creationcondition>
		</performgoal>

		<!-- Objetivo para que el agente tablero se registre -->
	    <achievegoalref name="df_register">
            <concrete ref="dfcap.df_register"/>
        </achievegoalref>
        

	</goals>

	<plans> 
		<!-- Registrar a un jugador -->
		<plan name="register_plan">
			<body class="TableroRegistraJugadorPlan"/>
			<trigger>
				<messageevent ref="Request_unirsepartida"/>
			</trigger>
		</plan>
		<!-- Plan para preparar la partida (asignar en funcion del numeor quienes van a ser espias y demas) -->
		<plan name="PrepararPartida">
			<body class="PrepararPartidaPlan"/>
			<trigger>
				<goal ref="JugarPartida"/>
			</trigger>
			<precondition>$beliefbase.total ==7 </precondition>
		</plan>
		<!-- Plan para avisar a los espias de quienes son los otros espias -->
		<plan name="AvisarEspias">
			<body class="AvisarEspiasPlan"/>
			<trigger>
				<goal ref="AvisarEspias"/>
			</trigger>
		</plan>
		<!-- Plan para añadir la creencia de los jugadores que forman el equipo-->
		<!-- No tiene objetivo asociado-->
		<plan name="EquipoElegido">
			<body class="EquipoElegidoPlan"/>
			<trigger>
				<messageevent ref="Inform_Equipo_elegido"/>
			</trigger>
		</plan>

		<!-- Plan para pedirles a los jugadores que voten el equipo-->
		<plan name="Aprobar_equipo">
			<body class="AprobarEquipoPlan"/>
			<trigger>
				<goal ref="Aprobar_equipo"/>
			</trigger>
		</plan>
		<!-- Plan para pedirles a los jugadores que voten la mision-->
		<plan name="Vota_mision">
			<body class="VotarMisionPlan"/>
			<trigger>
				<goal ref="VotarMision"/>
			</trigger>
		</plan>

		<!-- Plan para publicar el resultado de la mision, cambiar de ronda, cambiar de lider y aumentar o no las misiones completadas -->
		<plan name="AsignarLider">
			<body class="AsignarLiderPlan"/>
			<trigger>
				<goal ref="Asignar_Lider"/>
			</trigger>
		</plan>

	</plans>

	<events>

		<!-- Mensajes de Jugadores-->

		<!-- Un jugador solicita unirse a la partida -->
		<messageevent name="Request_unirsepartida" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value> 
 			</parameter>
			<parameter name="content-class" class="Class" direction="fixed">
				<value>Unirse_a_la_partida.class</value>
			</parameter>
		</messageevent>
		
		<!-- Mensaje de respuesta de aceptacion para Unirse a la partida -->
		<messageevent name="Agree_unirse_a_partida" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.AGREE</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
 			</parameter>
			<parameter name="content-class" class="Class" direction="fixed">
				<value>Unirse_a_la_partida.class</value>
			</parameter>
		</messageevent>

		<!-- Mensaje de respuesta de rechazo para Unirse a la partida -->
		<messageevent name="Refuse_unirse_a_partida" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REFUSE</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
 			</parameter>
			<parameter name="content-class" class="Class" direction="fixed">
				<value>Unirse_a_la_partida.class</value>
			</parameter>
		</messageevent>
		
		<!--  Request aprobar equipo -->
		<messageevent name="Request_Aprobar_equipo" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value> 
 			</parameter>
 			<parameter name="conversation-id" class="String">
				<value>SFipa.createUniqueId($scope.getAgentName())</value>
			</parameter>
			<parameter name="content-class" class="Class" direction="fixed">
				<value>Aprobar_equipo.class</value>
			</parameter>
		</messageevent>

		<!-- Mensaje de respuesta de aceptacion para aprobar el equipo -->
		<messageevent name="Agree_Aprobar_equipo" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.AGREE</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
 			</parameter>
			<parameter name="content-class" class="Class" direction="fixed">
				<value>Aprobar_equipo.class</value>
			</parameter>
		</messageevent>

		<!--  Request votar_mision -->
		<messageevent name="Request_Votar_mision" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value> 
 			</parameter>
 			<parameter name="conversation-id" class="String">
				<value>SFipa.createUniqueId($scope.getAgentName())</value>
			</parameter>
			<parameter name="content-class" class="Class" direction="fixed">
				<value>Votar_mision.class</value>
			</parameter>
		</messageevent>

		<!-- Mensaje de respuesta de aceptacion para Votar la misión -->
		<messageevent name="Agree_Votar_mision" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.AGREE</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
 			</parameter>
			<parameter name="content-class" class="Class" direction="fixed">
				<value>Votar_mision.class</value>
			</parameter>
		</messageevent>
		
		<!--  Inform repartir tarjeta personaje (para decidir quien va a ser espia y quien va a ser resistencia) -->
		<messageevent name="Inform_Tarjetas_personajes_repartidas" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
 			</parameter>
			<parameter name="content-class" class="Class" direction="fixed">
				<value>Tarjetas_personajes_repartidas.class</value>
			</parameter>
		</messageevent>

		<!--  Inform para enviar a los jugadores la lista con los jugadores de la partida-->
		<messageevent name="Inform_ListaJugadores" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
 			</parameter>
			<parameter name="content-class" class="Class" direction="fixed">
				<value>InformacionPartidaEnviada.class</value>
			</parameter>
		</messageevent>

		<!--  Inform Repartir tarjetas aceptacion a los jugadores -->
		<messageevent name="Inform_Tarjetas_aceptacion_repartidas" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
 			</parameter>
			<parameter name="content-class" class="Class" direction="fixed">
				<value>Tarjetas_aceptacion_repartidas.class</value>
			</parameter>
		</messageevent>

		<!--  Inform equipo elegido -->
		<messageevent name="Inform_Equipo_elegido" direction="send_receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
 			</parameter>
			<parameter name="content-class" class="Class" direction="fixed">
				<value>Equipo_elegido.class</value>
			</parameter>
		</messageevent>

		<!--  Inform Repartir tarjetas exito/fracaso a los jugadores -->
		<messageevent name="Inform_Tarjetas_exito_fracaso_repartidas" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
 			</parameter>
			<parameter name="content-class" class="Class" direction="fixed">
				<value>Tarjetas_exito_fracaso_repartidas.class</value>
			</parameter>
		</messageevent>

		<!--  Inform avisar espias -->
		<messageevent name="Inform_Avisar_espias" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
 			</parameter>
			<parameter name="content-class" class="Class" direction="fixed">
				<value>Avisar_espias.class</value>
			</parameter>
		</messageevent>

		<!--  Inform asignar lider -->
		<messageevent name="Inform_Lider_asignado" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
 			</parameter>
			<parameter name="content-class" class="Class" direction="fixed">
				<value>Lider_asignado.class</value>
			</parameter>
		</messageevent>

		<!--  Inform resultados Votacion mision -->
		<messageevent name="Inform_Votacion_publicada_mision" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
 			</parameter>
			<parameter name="content-class" class="Class" direction="fixed">
				<value>Votacion_publicada_mision.class</value>
			</parameter>
		</messageevent>

		<!--  Inform resultados Votacion equipo -->
		<messageevent name="Inform_Votacion_publicada_equipo" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
 			</parameter>
			<parameter name="content-class" class="Class" direction="fixed">
				<value>Votacion_publicada_equipo.class</value>
			</parameter>
		</messageevent>
		
		<!--  Inform sobre los ganadores al finalizar la partida -->
		<messageevent name="Inform_Partida_Finalizada" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
 			</parameter>
			<parameter name="content-class" class="Class" direction="fixed">
				<value>Partida_Finalizada.class</value>
			</parameter>
		</messageevent>

	</events>

	<properties>
	</properties>
	<configurations>
	    <configuration name="default">
            <goals>
                <initialgoal ref="df_register">
                    <parameter ref="description">
                        <value>
							SFipa.createAgentDescription(null,SFipa.createServiceDescription("tablero", "agente", "LaResistencia"))
                        </value>
                    </parameter>
                </initialgoal>
            </goals>
        </configuration>
    </configurations>
</agent>
